{"version":3,"file":"iran-vehicle-plate.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/iran-vehicle-plate.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import templateHTML from './templates/iran-vehicle-plate.html'; // Mark it as raw text\r\nimport templateCss from './css/iran-vehicle-plate.css'; // No need to import as a string; Rollup will handle it.\r\n\r\nclass IranVehiclePlate extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: 'open' });\r\n\r\n        // Variables to store the original dimensions.\r\n        this._originalWidth = null;\r\n        this._originalHeight = null;\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    connectedCallback() {\r\n        // Perform initial setup when the element is added to the DOM\r\n        this.render();\r\n\r\n        // Wait briefly to ensure the content is rendered and measured.\r\n        setTimeout(() => {\r\n            const plateElement = this.shadowRoot.querySelector('.plate');\r\n            // If not already stored, record the original dimensions.\r\n            if (!this._originalWidth || !this._originalHeight) {\r\n                const rect = plateElement.getBoundingClientRect();\r\n                this._originalWidth = rect.width;\r\n                this._originalHeight = rect.height;\r\n                console.log('Original dimensions:', this._originalWidth, this._originalHeight);\r\n            }\r\n            // Read user-specified width and height attributes (in pixels).\r\n            const desiredWidthAttr = this.getAttribute('width');\r\n            const desiredHeightAttr = this.getAttribute('height');\r\n            const desiredWidth = desiredWidthAttr ? parseFloat(desiredWidthAttr) : null;\r\n            const desiredHeight = desiredHeightAttr ? parseFloat(desiredHeightAttr) : null;\r\n\r\n            if (desiredWidth || desiredHeight) {\r\n                this.scaleToFit(desiredWidth, desiredHeight);\r\n            }\r\n\r\n            this.setContent()\r\n        }, 0);\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    static get observedAttributes() {\r\n        return ['width', 'height', 'left-part', 'alphabet-part', 'right-part', 'code-part'];\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        // When attributes change, re-scale using the stored original dimensions.\r\n        if (this._originalWidth && this._originalHeight) {\r\n            const desiredWidth = this.getAttribute('width') ? parseFloat(this.getAttribute('width')) : null;\r\n            const desiredHeight = this.getAttribute('height') ? parseFloat(this.getAttribute('height')) : null;\r\n            this.scaleToFit(desiredWidth, desiredHeight);\r\n        }\r\n\r\n        this.setContent();\r\n    }\r\n\r\n    render() {\r\n        // Render the content into the shadow DOM.\r\n        this.shadowRoot.innerHTML = `\r\n      <style>\r\n        ${templateCss}\r\n      </style>\r\n      <div class=\"plate\">\r\n        ${templateHTML}\r\n      </div>\r\n    `;\r\n    }\r\n\r\n    calculateScaleFactor(desiredWidth, desiredHeight) {\r\n        // Use the original dimensions stored after initial rendering.\r\n        const originalWidth = this._originalWidth;\r\n        const originalHeight = this._originalHeight;\r\n\r\n        let scaleFactor;\r\n        if (desiredWidth && desiredHeight) {\r\n            const scaleW = desiredWidth / originalWidth;\r\n            const scaleH = desiredHeight / originalHeight;\r\n            scaleFactor = Math.min(scaleW, scaleH);\r\n        } else if (desiredWidth) {\r\n            scaleFactor = desiredWidth / originalWidth;\r\n        } else if (desiredHeight) {\r\n            scaleFactor = desiredHeight / originalHeight;\r\n        } else {\r\n            scaleFactor = 1;\r\n        }\r\n        return scaleFactor;\r\n    }\r\n\r\n    applyScaling(scaleFactor) {\r\n        const plateElement = this.shadowRoot.querySelector('.plate');\r\n        // Apply the scale transformation.\r\n        plateElement.style.transform = `scale(${scaleFactor})`;\r\n        plateElement.style.transformOrigin = 'top left';\r\n\r\n        // Update the host element’s size so that it occupies the correct space.\r\n        const scaledWidth = this._originalWidth * scaleFactor;\r\n        const scaledHeight = this._originalHeight * scaleFactor;\r\n        this.style.display = 'inline-block';\r\n        this.style.width = `${scaledWidth}px`;\r\n        this.style.height = `${scaledHeight}px`;\r\n    }\r\n\r\n    scaleToFit(desiredWidth, desiredHeight) {\r\n        const scaleFactor = this.calculateScaleFactor(desiredWidth, desiredHeight);\r\n        this.applyScaling(scaleFactor);\r\n    }\r\n\r\n    setContent() {\r\n        // SET CONTENT\r\n        const plateElem = this.shadowRoot.querySelector('.plate');\r\n        if(plateElem == null)\r\n            return;\r\n\r\n        const leftDataElem = plateElem.querySelector('.left-data');\r\n        const alphabetElem = plateElem.querySelector('.alphabet-data');\r\n        const rightElem = plateElem.querySelector('.right-data');\r\n        const codeElem = plateElem.querySelector('.code-data');\r\n\r\n        const leftPartData = this.getAttribute('left-part')\r\n        const alphabetPartData = this.getAttribute('alphabet-part')\r\n        const rightPartData = this.getAttribute('right-part')\r\n        const codePartData = this.getAttribute('code-part')\r\n\r\n        leftDataElem.textContent = this.convertNumberToPersian(leftPartData);\r\n        alphabetElem.textContent = this.convertNumberToPersian(alphabetPartData);\r\n        rightElem.textContent = this.convertNumberToPersian(rightPartData);\r\n        codeElem.textContent = this.convertNumberToPersian(codePartData);\r\n    }\r\n\r\n    convertNumberToPersian(num) {\r\n        if(num == undefined || num == null)\r\n            return '';\r\n\r\n        const persianDigits = ['۰','۱','۲','۳','۴','۵','۶','۷','۸','۹'];\r\n        return num.toString().replace(/\\d/g, digit => persianDigits[digit]);\r\n    }\r\n}\r\ncustomElements.define('iran-vehicle-plate', IranVehiclePlate);\r\n\r\nexport default IranVehiclePlate;"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","IranVehiclePlate","HTMLElement","constructor","super","this","attachShadow","mode","_originalWidth","_originalHeight","connectedCallback","render","setTimeout","plateElement","shadowRoot","querySelector","rect","getBoundingClientRect","width","height","console","log","desiredWidthAttr","getAttribute","desiredHeightAttr","desiredWidth","parseFloat","desiredHeight","scaleToFit","setContent","observedAttributes","attributeChangedCallback","name","oldValue","newValue","innerHTML","templateCss","calculateScaleFactor","originalWidth","originalHeight","scaleFactor","scaleW","scaleH","Math","min","applyScaling","transform","transformOrigin","scaledWidth","scaledHeight","display","plateElem","leftDataElem","alphabetElem","rightElem","codeElem","leftPartData","alphabetPartData","rightPartData","codePartData","textContent","convertNumberToPersian","num","undefined","persianDigits","toString","replace","digit","customElements","define"],"mappings":"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"}